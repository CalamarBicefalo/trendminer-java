package org.openimaj.text.nlp.textpipe.annotations;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang.StringUtils;
import org.openimaj.text.nlp.tokenisation.ReversableToken;

/**
 * A {@link TokenAnnotation} represents a single token generated by a tokeniser.
 * It can be further annotated. It is aware of its off-sets in the
 * RawStringAnnotation that generated it.
 * 
 * @author laurence
 * 
 */
public class TokenAnnotation extends TextPipeAnnotation implements ReversableToken {
	String stringToken;
	String raw;
	public int start;
	public int stop;

	public TokenAnnotation(String token,String raw, int start, int stop) {
		super();
		this.stringToken = token;
		this.start = start;
		this.stop = stop;
		this.raw=raw;
	}

	public String getStringToken() {
		return stringToken;
	}	

	@Override
	public String getRawString() {
		return raw;
	}

	@Override
	public String reverse(List<? extends ReversableToken> tokens) {
		List<String> raws = new ArrayList<String>();
		for(ReversableToken tok:tokens){
			raws.add(tok.getRawString());
		}
		return StringUtils.join(raws,"");
	}

}
